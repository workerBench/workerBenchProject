version: '3.8'

services:
  app:
    build: .
    ports:
      - '5000:5000'
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_SECRET_KEY_ADMIN: ${JWT_SECRET_KEY_ADMIN}
      DB_HOST: 'host.docker.internal' # If you're using Docker Desktop on Windows or macOS
      # DATABASE_HOST: '<your_local_machine_IP>' # If you're using Docker on Linux
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_LOGGING: ${DB_LOGGING}
      DB_SYNCHRONAIZE: ${DB_SYNCHRONAIZE}
      TEST_DB_NAME: ${TEST_DB_NAME}
      GOOGLE_MAIL: ${GOOGLE_MAIL}
      GOOGLE_PASSWORD: ${GOOGLE_PASSWORD}
      CORS_ORIGIN_LIST: ${CORS_ORIGIN_LIST}
      AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
      AWS_SECRET_KEY: ${AWS_SECRET_KEY}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      AWS_S3_BUCKET_NAME_IMAGE_INPUT: ${AWS_S3_BUCKET_NAME_IMAGE_INPUT}
      AWS_S3_BUCKET_NAME_VIDEO_INPUT: ${AWS_S3_BUCKET_NAME_VIDEO_INPUT}
      AWS_CLOUD_FRONT_DOMAIN_IMAGE: ${AWS_CLOUD_FRONT_DOMAIN_IMAGE}
      AWS_CLOUD_FRONT_DOMAIN_VIDEO: ${AWS_CLOUD_FRONT_DOMAIN_VIDEO}
      PORTONE_API_KEY: ${PORTONE_API_KEY}
      PORTONE_API_SECRET_KEY: ${PORTONE_API_SECRET_KEY}
      REDIS_HOSTNAME: 'redis'
      REDIS_PORT: 6379
    depends_on: # app service 가 redis 실행 후에 실행됨.
      - redi

  redis:
    image: 'redis:latest' # 최신 버전 사용
    command: redis-server --bind '0.0.0.0
    ports:
      - '6379:6379'
